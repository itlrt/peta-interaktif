// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model untuk stasiun LRT
model Station {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  location    String?
  latitude    Float
  longitude   Float
  imageUrl    String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  destinations Destination[]
}

// Model untuk destinasi di sekitar stasiun
model Destination {
  id          Int      @id @default(autoincrement())
  name        String   
  description String?
  latitude    Float
  longitude   Float
  imageUrl    String?
  station     Station  @relation(fields: [stationId], references: [id], onDelete: Cascade)
  stationId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([name, stationId])
}

// Model untuk pengguna (admin)
model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  name      String
  role      UserRole   @default(VIEWER)
  activities Activity[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// Enum untuk role pengguna
enum UserRole {
  ADMIN
  OPERATOR
  VIEWER
}

model Activity {
  id        Int      @id @default(autoincrement())
  type      String   // e.g., "USER_CREATED", "STATION_UPDATED", etc.
  message   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
